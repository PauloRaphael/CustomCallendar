@model BlockViewModel

@{
    ViewData["Title"] = "Next Events";
}

<div class="d-flex justify-content-between align-items-center mt-3">
    <h1>@ViewData["Title"]</h1>
    <p class="mt-auto mb-auto">
        <a asp-action="Create" class="btn btn-primary">Create New</a>
    </p>
</div>

<div class="d-flex justify-content-between align-items-center mt-3">
    <span class="w-25"></span>
    <div class="">
        <form asp-action="SearchByCategory" method="get">
            <div class="form-group d-inline-block me-2">
                <label asp-for="CategoryId" class="control-label">Category</label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
            </div>
            <div class="form-group d-inline-block">
                <input type="submit" value="Search" class="btn btn-primary my-4" />
            </div>
        </form>
    </div>
</div>

<hr />

<div class="container">
    <div class="row d-flex justify-content-center flex-wrap">

        @foreach (var item in Model.Block.Where(m => m.Date > DateTime.Now).Select((value, index) => new
        {
            value,
            index
        }))
        {

            //var i = item.value.Category.Name == "";

            string important = "";
            var blockClass = item.index % 2 == 0 ? "bg-primary" : "bg-secondary";

            if (item.value.Important)
            {
                important = " | Important!";
                blockClass = "bg-danger";
            }

            <div class="card text-white text-center @blockClass text-white m-1 p-0" style="max-width: 14rem;">
                <div class="card-header w-100">
                    @Html.DisplayFor(modelItem => item.value.Date)
                    <a asp-action="Details" asp-route-id="@item.value.Id">
                        <span class="fa fa-info-circle text-light"></span>
                    </a>
                </div>
                <div class="card-body block d-flex flex-column justify-content-between text-break text-center p-3">
                    <h4 class="card-title">@Html.DisplayFor(modelItem => item.value.Title)</h4>
                    <p class="card-text">@Html.DisplayFor(modelItem => item.value.EventText)</p>
                    <div>
                        <a asp-action="Delete" asp-route-id="@item.value.Id">
                            <span class="fa fa-trash-o text-light"></span>
                        </a>
                    </div>

                </div>
                <div class="card-footer text-muted">
                    @{
                        var today = DateTime.Now;
                        var eventDate = item.value.Date;
                        var daysLeft = (eventDate - today).Days;

                        if (daysLeft > 0)
                        {
                            @($" Em {daysLeft} dias")
                        }
                        else if (daysLeft == 0)
                        {
                            @("Hoje")
                        }
                    }
                    @important
                </div>
            </div>
        }
    </div>
</div>